// components/AboutHero.tsx
import { IdCardLanyard, PiggyBank, Sprout } from "lucide-react";
import Image from "next/image";

export default function About() {
	type TimelineItem = {
		title: string;
		dateLabel: string; // e.g., "Submitted on July 30, 2025"
		description: string;
		href?: string;
	};

	const items: TimelineItem[] = [
		{
			title: "OpenAI Open Model Hackathon",
			dateLabel: "Submitted on August 10, 2025",
			description:
				"Offline AI-powered medical translator that works without internet, detects emergencies instantly, and provides a quick-access medical phrasebook.",
			href: "https://devpost.com/software/storypulse?ref_content=user-portfolio&ref_feature=in_progress",
		},
		{
			title: "Proof of Concept Hackathon",
			dateLabel: "Started on August 3, 2025",
			description:
				"Mobile app using zkTLS and on-chain payments to verify freelance work without relying on trust.",
			href: "https://devpost.com/software/proof-of-work",
		},
		{
			title: "Tableau Next Virtual Hackathon",
			dateLabel: "Submitted on August 2, 2025",
			description:
				"Tableau-powered dashboard that tracks after-hours activity, PTO usage, ticket velocity, and response times to detect early signs of burnout.",
			href: "https://devpost.com/software/employee-burnout-radar?ref_content=user-portfolio&ref_feature=in_progress",
		},
		{
			title: "Qloo LLM Hackathon",
			dateLabel: "Submitted on July 30, 2025",
			description:
				"Built for the Qloo LLM Hackathon â€” a taste-graph matchmaking platform matching users on cultural preferences.",
			href: "https://devpost.com/software/kindredai?ref_content=user-portfolio&ref_feature=in_progress",
		},
		{
			title: "Code with Kiro Hackathon",
			dateLabel: "Started on July 29, 2025",
			description:
				"Multiplayer party card game where surreal themes and decks are generated by Gemini AI each session.",
			href: "https://devpost.com/software/deep-cut",
		},
	];

	const chunk = <T,>(arr: T[], size: number) =>
		arr.reduce<T[][]>(
			(acc, _, i) => (i % size ? acc : [...acc, arr.slice(i, i + size)]),
			[]
		);

	function Timeline3PerRow({ data = items }: { data?: TimelineItem[] }) {
		const rows = chunk(data, 3);

		return (
			<div className="space-y-10">
				{rows.map((row, rIdx) => (
					<ol
						key={rIdx}
						className="sm:flex"
					>
						{row.map((item, i) => {
							return (
								<li
									key={item.title}
									className="relative mb-6 sm:mb-0 sm:flex-1"
								>
									<div className="flex items-center">
										<div className="z-10 flex items-center justify-center w-6 h-6 bg-blue-100 rounded-full ring-0 ring-white dark:bg-blue-900 sm:ring-8 dark:ring-gray-900 shrink-0">
											<svg
												className="w-2.5 h-2.5 text-blue-800 dark:text-blue-300"
												aria-hidden="true"
												xmlns="http://www.w3.org/2000/svg"
												fill="currentColor"
												viewBox="0 0 20 20"
											>
												<path d="M20 4a2 2 0 0 0-2-2h-2V1a1 1 0 0 0-2 0v1h-3V1a1 1 0 0 0-2 0v1H6V1a1 1 0 0 0-2 0v1H2a2 2 0 0 0-2 2v2h20V4ZM0 18a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8H0v10Zm5-8h10a1 1 0 0 1 0 2H5a1 1 0 0 1 0-2Z" />
											</svg>
										</div>
										<div
											className={`hidden sm:flex w-full bg-gray-200 h-0.5 dark:bg-gray-700`}
										/>
									</div>

									<div className="mt-3 sm:pe-8">
										<h3 className="text-lg font-semibold text-gray-900 dark:text-white">
											{item.href ? (
												<a
													href={item.href}
													target="_blank"
													rel="noreferrer"
													className="hover:underline"
												>
													{item.title}
												</a>
											) : (
												item.title
											)}
										</h3>
										<time className="block mb-2 text-sm font-normal leading-none text-gray-400 dark:text-gray-500">
											{item.dateLabel}
										</time>
										<p className="text-base font-normal text-gray-500 dark:text-gray-400">
											{item.description}
										</p>
									</div>
								</li>
							);
						})}
					</ol>
				))}
			</div>
		);
	}

	return (
		<section className="bg-neutral-900 text-white min-h-screen py-16 px-6 md:px-12">
			<div className="mx-auto">
				{/* Profile */}
				<div className="flex items-start gap-4 mb-8">
					<Image
						src="https://hvnbpd9agmcawbt2.public.blob.vercel-storage.com/propic" // Replace with actual path
						alt="Profile"
						width={60}
						height={60}
						className="rounded-full object-cover"
					/>
					<div>
						<h1 className="text-2xl md:text-3xl font-bold leading-tight">
							Senior software engineer with front end focus.
						</h1>
						<p className="mt-2 text-white/80">
							I design and develop digital products & visual interfaces.
							<br />
							Interested in web3 and AI. Active in hackathons.
						</p>
						<p className="mt-2 text-white/60">
							Currently <span className="text-white">@ SS&C Technologies</span>
						</p>
					</div>
				</div>

				{/* Team Section */}
				<div className="mt-12 space-y-4 border-t border-white/10 pt-6">
					<TeamRow
						logo={<PiggyBank />}
						company="SS&C Technologies"
						title="Senior Software Engineer"
						year="2023-Present"
					/>
					<TeamRow
						logo={<IdCardLanyard />}
						company="US Immigration (via Capital Technology Group)"
						title="Software Engineer"
						year="2023"
					/>
					<TeamRow
						logo={<Sprout />}
						company="No Name Charli"
						title="Software Engineer"
						year="2021-2023"
					/>
					<TeamRow
						logo={<Sprout />}
						company="Visneta"
						title="Software Engineer"
						year="2018-2021"
					/>
				</div>

				{/* <div className="mt-12 space-y-4 border-t border-white/10 pt-6">
					{Timeline3PerRow({ data: items })}
				</div> */}
			</div>
		</section>
	);
}

function TeamRow({
	logo,
	company,
	title,
	year,
}: {
	logo: React.ReactNode;
	company: string;
	title: string;
	year: string;
}) {
	return (
		<div className="flex items-center justify-between">
			<div className="flex items-center gap-4">
				{logo}
				<div>
					<p className="font-medium">{company}</p>
					<p className="text-white/60 text-sm">{title}</p>
				</div>
			</div>
			<div className="text-white/50 text-sm">{year}</div>
		</div>
	);
}
